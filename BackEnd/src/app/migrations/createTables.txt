CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(255) NOT NULL,
    lastName VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    roleId INT NOT NULL,
    blocked TINYINT(1) DEFAULT 0,
    password_attempt INT DEFAULT 0,
);

CREATE TABLE user_validation_codes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userId INT NOT NULL,
    code VARCHAR(255) NOT NULL,
    type ENUM('ACTIVATE_ACCOUNT', 'BLOCKED_ACCOUNT', 'MFA', 'PASSWORD_RESET') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    used TINYINT(1) DEFAULT 0,
    code_attempts INT DEFAULT 0,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE sessions (
    sessionId VARCHAR(255) PRIMARY KEY,
    userId INT,
    sessionExpiration INT,
    idleExpiration INT,
    userRole INT,
    userEmail VARCHAR(255),
    userFirstName VARCHAR(255),
    userLastName VARCHAR(255),
);

CREATE TABLE role (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(255) UNIQUE,
    description VARCHAR(255),
    permissions JSON
);

#Right now, it will be useless to implement it
CREATE TABLE permissions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    permission_name VARCHAR(255) NOT NULL UNIQUE -- store unique permission names
);

#cron
DELETE FROM sessions  WHERE 28548925 > sessionExpiration;